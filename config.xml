<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1308.v58d48a_763b_31">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2141.v5402e818a_779"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2141.v5402e818a_779">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Pipeline GPI II</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3691.v28b_14c465a_b_b_">
    <script>pipeline {
    agent any
    stages{
    stage(&apos;Preparation&apos;) { // 
        steps {
            //Borro la carpeta si existe
            sh &apos;rm -rf tarea-GPI2&apos;
            //Clono el repositorio
            sh &apos;git clone https://github.com/rubeniriso/tarea-GPI2.git&apos;
        }
    }
    stage(&apos;Analyse&apos;) {
        steps {
       // Ejecutar el analisis de codigo estático con PMD
        sh &apos;/home/alumno/Descargas/pmd-bin-7.0.0-rc2/bin/pmd check -d tarea-GPI2/MifareClassicTool/ --rulesets=rulesets/java/quickstart.xml -r ./results.txt --no-fail-on-violation&apos;
        }
    }
     stage(&apos;Build&apos;) {
        steps {
        // Compilación
            dir(&apos;tarea-GPI2/MifareClassicTool&apos;){
                sh &apos;./gradlew&apos; 
            }
        }
    }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>